{
  "Comment": "Flow to register a model from DataSci sandbox to project space",
  "StartAt": "Register Model",
  "States": {
    "Register Model": {
      "Comment": "Copy the model artifacts into the project bucket and create the API object",
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${FunctionRegisterModelName}",
        "Payload.$": "$"
      },
      "ResultPath": "$.ModelRegistration",
      "Next": "Test Transform"
    },
    "Test Transform": {
      "Comment": "TODO: Add ExperimentConfig, Tags, Parameterized infra etc",
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createTransformJob.sync",
      "Parameters": {
        "BatchStrategy": "MultiRecord",
        "DataProcessing": {
          "InputFilter": "$[:-2]",
          "JoinSource": "Input"
        },
        "MaxPayloadInMB": 3,
        "ModelName.$": "$.ModelRegistration.Payload.ModelName",
        "TransformInput": {
          "CompressionType": "None",
          "ContentType": "text/csv",
          "DataSource": {
            "S3DataSource": {
              "S3DataType": "S3Prefix",
              "S3Uri": "s3://${SourceBucket}/test"
            }
          },
          "SplitType": "Line"
        },
        "TransformJobName.$": "$.ModelRegistration.Payload.ModelName",
        "TransformOutput": {
          "Accept": "text/csv",
          "AssembleWith": "Line",
          "S3OutputPath": "s3://${ArtifactsBucket}/test-results"
        },
        "TransformResources": {
          "InstanceCount": 1,
          "InstanceType": "ml.p3.2xlarge"
        }
      },
      "ResultPath": "$.TestTransform",
      "Next": "Deployment Approval"
    },
    "Deployment Approval": {
      "Comment": "Send a request email and wait for a click on the embedded approve or reject link",
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "TimeoutSeconds": 604800,
      "Parameters": {
        "FunctionName": "${FunctionRequestApprovalName}",
        "Payload": {
          "ExecutionContext.$": "$$",
          "ApprovalUri": "${ApprovalUri}",
          "RejectionUri": "${RejectionUri}",
          "ManagerEmailAddress": "${ManagerEmail}",
          "EmailTopic": "${EmailTopic}",
          "TimeoutDescription": "one week"
        }
      },
      "ResultPath": "$.Approval",
      "Next": "Approval Outcome"
    },
    "Approval Outcome": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Approval.Status",
          "StringEquals": "Approved",
          "Next": "Check Endpoint Status"
        },
        {
          "Variable": "$.Approval.Status",
          "StringEquals": "Rejected",
          "Next": "Rejected"
        }
      ]
    },
    "Rejected": {
      "Comment": "TODO: Any notification required?",
      "Type": "Fail",
      "Cause": "Rejection link clicked",
      "Error": "Rejected"
    },
    "Check Endpoint Status": {
      "Comment": "Check whether the endpoint is new or existing and stable",
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${FunctionCheckEndpointStatusName}",
        "Payload.$": "$"
      },
      "ResultPath": "$.EndpointStatus",
      "Next": "Endpoint Status"
    },
    "Endpoint Status": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.EndpointStatus.Payload.Status",
          "StringEquals": "New",
          "Next": "Scale"
        },
        {
          "Variable": "$.EndpointStatus.Payload.Status",
          "StringEquals": "Testing",
          "Next": "Endpoint Busy"
        },
        {
          "Variable": "$.EndpointStatus.Payload.Status",
          "StringEquals": "Stable",
          "Next": "Canary Deploy"
        }
      ]
    },
    "Endpoint Busy": {
      "Type": "Fail",
      "Cause": "Endpoint already testing multiple production variants: Wait to stabilize to start another test",
      "Error": "EndpointBusy"
    },
    "Canary Deploy": {
      "Comment": "TODO: Low-weight deployment to endpoint",
      "Type": "Wait",
      "Seconds": 5,
      "Next": "Monitor"
    },
    "Monitor": {
      "Comment": "TODO: Monitor for errors",
      "Type": "Wait",
      "Seconds": 5,
      "Next": "Scale"
    },
    "Scale": {
      "Comment": "TODO: Shift traffic to new model",
      "Type": "Pass",
      "End": true
    }
  }
}